Index: src/test/java/ru/javawebinar/topjava/service/MealServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ru/javawebinar/topjava/service/MealServiceTest.java b/src/test/java/ru/javawebinar/topjava/service/MealServiceTest.java
--- a/src/test/java/ru/javawebinar/topjava/service/MealServiceTest.java	(revision d0184fb737e5e8d4505fc5c906c9488d5e853fe2)
+++ b/src/test/java/ru/javawebinar/topjava/service/MealServiceTest.java	(date 1635873936041)
@@ -15,7 +15,7 @@
 import org.springframework.test.context.jdbc.Sql;
 import org.springframework.test.context.jdbc.SqlConfig;
 import org.springframework.test.context.junit4.SpringRunner;
-import ru.javawebinar.topjava.Profiles;
+import ru.javawebinar.topjava.ActiveDbProfileResolver;
 import ru.javawebinar.topjava.model.Meal;
 import ru.javawebinar.topjava.util.exception.NotFoundException;
 
@@ -35,7 +35,7 @@
 })
 @RunWith(SpringRunner.class)
 @Sql(scripts = "classpath:db/populateDB.sql", config = @SqlConfig(encoding = "UTF-8"))
-@ActiveProfiles(Profiles.ACTIVE_DB)
+@ActiveProfiles(resolver = ActiveDbProfileResolver.class)
 public class MealServiceTest {
     private static final Logger log = getLogger("result");
 
Index: src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java b/src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java
--- a/src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java	(revision d0184fb737e5e8d4505fc5c906c9488d5e853fe2)
+++ b/src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java	(date 1635873936057)
@@ -9,7 +9,7 @@
 import org.springframework.test.context.jdbc.Sql;
 import org.springframework.test.context.jdbc.SqlConfig;
 import org.springframework.test.context.junit4.SpringRunner;
-import ru.javawebinar.topjava.Profiles;
+import ru.javawebinar.topjava.ActiveDbProfileResolver;
 import ru.javawebinar.topjava.UserTestData;
 import ru.javawebinar.topjava.model.Role;
 import ru.javawebinar.topjava.model.User;
@@ -26,7 +26,7 @@
 })
 @RunWith(SpringRunner.class)
 @Sql(scripts = "classpath:db/populateDB.sql", config = @SqlConfig(encoding = "UTF-8"))
-@ActiveProfiles(Profiles.ACTIVE_DB)
+@ActiveProfiles(resolver = ActiveDbProfileResolver.class)
 public class UserServiceTest {
 
     @Autowired
Index: src/test/java/ru/javawebinar/topjava/ActiveDbProfileResolver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ru/javawebinar/topjava/ActiveDbProfileResolver.java b/src/test/java/ru/javawebinar/topjava/ActiveDbProfileResolver.java
new file mode 100644
--- /dev/null	(date 1635873936072)
+++ b/src/test/java/ru/javawebinar/topjava/ActiveDbProfileResolver.java	(date 1635873936072)
@@ -0,0 +1,13 @@
+package ru.javawebinar.topjava;
+
+import org.springframework.lang.NonNull;
+import org.springframework.test.context.ActiveProfilesResolver;
+
+//http://stackoverflow.com/questions/23871255/spring-profiles-simple-example-of-activeprofilesresolver
+public class ActiveDbProfileResolver implements ActiveProfilesResolver {
+    @Override
+    public @NonNull
+    String[] resolve(@NonNull Class<?> aClass) {
+        return new String[]{Profiles.getActiveDbProfile()};
+    }
+}
Index: src/main/java/ru/javawebinar/topjava/Profiles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/Profiles.java b/src/main/java/ru/javawebinar/topjava/Profiles.java
--- a/src/main/java/ru/javawebinar/topjava/Profiles.java	(revision d0184fb737e5e8d4505fc5c906c9488d5e853fe2)
+++ b/src/main/java/ru/javawebinar/topjava/Profiles.java	(date 1635873936025)
@@ -1,5 +1,7 @@
 package ru.javawebinar.topjava;
 
+import org.springframework.util.ClassUtils;
+
 public class Profiles {
     public static final String
             JDBC = "jdbc",
@@ -11,5 +13,14 @@
             POSTGRES_DB = "postgres",
             HSQL_DB = "hsqldb";
 
-    public static final String ACTIVE_DB = POSTGRES_DB;
+    //  Get DB profile depending of DB driver in classpath
+    public static String getActiveDbProfile() {
+        if (ClassUtils.isPresent("org.postgresql.Driver", null)) {
+            return POSTGRES_DB;
+        } else if (ClassUtils.isPresent("org.hsqldb.jdbcDriver", null)) {
+            return HSQL_DB;
+        } else {
+            throw new IllegalStateException("Could not find DB driver");
+        }
+    }
 }
